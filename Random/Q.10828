class Stack:
    def __init__(self):
        self.stack = []

    def push(self, x):
        self.stack.append(x)

    def pop(self):
        return self.stack.pop() if self.stack else -1

    def size(self):
        return len(self.stack)

    def empty(self):
        return 1 if not self.stack else 0

    def top(self):
        return self.stack[-1] if self.stack else -1

# Create a Stack instance
stack = Stack()

# Create list for commands that will be excuted in order
commands = []
# Get number for how much would it repeat
N= int(input())

for i in range(N):
    commands.append(input())

# Process each command
for command in commands:
    cmd = command.split()
    if cmd[0] == "push":
        stack.push(int(cmd[1]))
    elif cmd[0] == "pop":
        print(stack.pop())
    elif cmd[0] == "size":
        print(stack.size())
    elif cmd[0] == "empty":
        print(stack.empty())
    elif cmd[0] == "top":
        print(stack.top())
